#! /app/.heroku/node/bin/node

var Knex = require('../init/knex');

var request = require('request'); // "Request" library
var querystring = require('querystring');
var cookieParser = require('cookie-parser');


//for production environment
var QUOTAGUARDSTATIC_URL = 'http://quotaguard4431:b20639d6f6d3@us-east-1-static-hopper.quotaguard.com:9293';

var options, gapi;

// for local development
var api_key = 'AIzaSyBbIYtX2_L7X3GDe33LLxoYlWJBOcHWUwA';

var songList;

Knex('songs').distinct('vid')
  .then(function(songs) {
    var vids = '';
    var n = 0;
    songList = songs.length;
    songs.forEach(function(song) {  
        if(song.vid != '#NAME?') {
          vids += song.vid + ',';
        }
        n++;
        if(n%45 == 0) {
          vids = vids.substring(0,vids.length - 1);
          queryViews(vids, 0);
          vids = '';
        }
    });
  if(vids.length > 0) {
    vids = vids.substring(0,vids.length - 1);
    queryViews(vids, 1);
  }
});

function getLastViewCount(m) {
  if(m.pop_6 != 0)
    return m.pop_6;
  else if(m.pop_5 != 0)
    return m.pop_5;
  else if(m.pop_4 != 0)
    return m.pop_4;
  else if(m.pop_3 != 0)
    return m.pop_3;
  else if(m.pop_2 != 0)
    return m.pop_2;
  else
    return m.pop_1;
}

function psql(m) {
  if(m.length > 0) {
    if(m[0]) {
      return m[0];
    } else {
      return m.rows;
    }
  } else {
    return m;
  }
}

function queryViews(vids, end) {
  gapi = "https://www.googleapis.com/youtube/v3/videos?part=statistics&id=" + vids + "&key=" + api_key + "&alt=json";
  options = {
    proxy: process.env.QUOTAGUARDSTATIC_URL,
    url: gapi,
    headers: {
        'User-Agent': 'node.js'
    }
  };
  request(options, function(error, response, body) {
    var items = JSON.parse(body).items;
    var time = new Date();
    var today = time.toISOString().substr(0, 19).replace('T', ' ');
    time.setDate(time.getDate() - 1);
    var n = 0;
    items.forEach(function(item) {
      n++;
      Knex('popularity').where('vid', item.id)
      .then(function(m) {
        m = psql(m);
        console.log(m);
        if(m.length != 0) {
          console.log(new Date(m.updated_at));
          console.log(new Date(time));
          console.log(new Date(m.updated_at) <= new Date(time));
          if(new Date(m.updated_at) <= new Date(time)) {
            var week = getLastViewCount(m);
            if(week == 0) {
              var trending = 1;
            } else {
              var trending = Math.round((item.statistics.viewCount - week)/week*10000);
            }
            week = item.statistics.viewCount - week;
            Knex('popularity').where('vid', item.id).update({pop_1: item.statistics.viewCount, pop_2: m.pop_1, pop_3: m.pop_2, pop_4: m.pop_3, pop_5: m.pop_4, pop_6: m.pop_5, pop_7: m.pop_6, pop_week: week, pop_trending: trending, updated_at: today})
            .then(function() {
              console.log('-----');
              if(end && n == items.length) {
              
              }
            });
          }
        } else {
          Knex('popularity').insert({pop_1: item.statistics.viewCount, vid: item.id, updated_at: today})
          .then(function() {
            if(end && n == m.length) {
              
            }
          });
        }
      });
    });
  });
}
